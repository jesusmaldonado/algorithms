Algorithms solution

1. Insertion sort diagram

A = [31,41,59,26,41,58]
no sorts until the third element
A = [26,31,41,59,41,58]
A = [26,31,41,41,59,58]
A = [26,31,41,41,58,59]

2. Just flip the comparator.

def inc_insertion_sort(array)
  #go through the array
  array.each_with_index do |el, i| #n steps
    #the elements starting from [0..i - 1] will always be sorted (initialization loop invariant)
    # run 1: el: 5, i: 1
    j = i - 1 #1 step
    while j >= 0 && array[j] < el #at worst, we will do n-1 comparisons
      # run 1: true
      array[j+1] = array[j]
      # run1: [5,5,4,6,1,3]
      j -= 1
      # run1: 0
    end
    array[j+1] = el #1 step
    # run1: [2,5,4,6,1,3]
    #the array is still sorted (propagation)
  end
  array #1 step (then here at termination, the algorithm is correct)
end

3. Input: two (n-bit arrays are inserted, with length of n elements that represents the integer)
    Output: an n+1 array with the output of
